{"version":3,"sources":["upperFirstLetter.js","components/NewTaskForm.js","constants.js","components/Task.js","components/TaskList.js","components/TasksFilter.js","components/Footer.js","App.js","index.js"],"names":["upperFirstLetter","string","charAt","toUpperCase","slice","NewTaskForm","state","value","changeHandler","e","setState","target","keydownHandler","key","createTask","props","onCreate","isClone","this","list","find","task","desc","trim","isVoid","isValid","className","placeholder","autoFocus","onChange","onKeyDown","style","outline","Component","defaultProps","PropTypes","arrayOf","exact","id","isRequired","timestamp","number","mod","ACTIVE","COMPLETED","Task","interval","created","formatDistanceToNow","addSuffix","includeSeconds","setInterval","clearInterval","deleteSelf","toggleCompletedSelf","type","checked","onClick","TaskList","onToggleCompleted","onDeleteTask","map","TasksFilter","filters","currentFilter","setCurrentFilter","filter","Footer","count","clearCompleted","App","tasks","newTask","Date","now","toggleCompleted","toggledTask","forceUpdate","deleteTask","JSON","parse","localStorage","getItem","setItem","stringify","length","newFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05ed4b26.chunk.js","sourcesContent":["export const upperFirstLetter = (string = \"string\") =>\r\n  string.charAt(0).toUpperCase() + string.slice(1)\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { upperFirstLetter } from \"../upperFirstLetter\"\r\n\r\nclass NewTaskForm extends Component {\r\n  state = {\r\n    value: \"\",\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ value: e.target.value })\r\n  }\r\n\r\n  keydownHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      const { onCreate: createTask } = this.props\r\n      createTask(upperFirstLetter(this.state.value))\r\n      this.setState({ value: \"\" })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isClone = !!this.props.list.find(\r\n      (task) => task.desc === upperFirstLetter(this.state.value).trim()\r\n    )\r\n    const isVoid = !this.state.value\r\n    const isValid = !isClone && !isVoid\r\n\r\n    return (\r\n      <input\r\n        className=\"new-todo\"\r\n        placeholder=\"What needs to be done?\"\r\n        autoFocus\r\n        value={this.state.value}\r\n        onChange={this.changeHandler}\r\n        onKeyDown={isValid ? this.keydownHandler : () => {}}\r\n        style={{\r\n          outline: isValid ? \"\" : \"1px solid crimson\",\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nNewTaskForm.defaultProps = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      desc: PropTypes.string.isRequired,\r\n      timestamp: PropTypes.number.isRequired,\r\n      mod: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n}\r\n\r\nNewTaskForm.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default NewTaskForm\r\n","export const ACTIVE = \"active\"\r\nexport const COMPLETED = \"completed\"\r\nexport const EDITING = \"editing\"\r\nexport const MOCK_CREATED = \"created 17 seconds ago\"\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\"\r\n\r\nimport { COMPLETED } from \"../constants\"\r\n\r\nclass Task extends Component {\r\n  interval = null\r\n  state = {\r\n    created: \"\",\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      created: formatDistanceToNow(this.props.task.timestamp, {\r\n        addSuffix: true,\r\n        includeSeconds: true,\r\n      }),\r\n    })\r\n\r\n    this.interval = setInterval(() => {\r\n      this.setState({\r\n        created: formatDistanceToNow(this.props.task.timestamp, {\r\n          addSuffix: true,\r\n          includeSeconds: true,\r\n        }),\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  render() {\r\n    const { desc, mod } = this.props.task\r\n    const { deleteSelf, toggleCompletedSelf } = this.props\r\n\r\n    return (\r\n      <li className={mod}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCompletedSelf}\r\n            checked={mod === COMPLETED}\r\n          />\r\n          <label>\r\n            <span className=\"description\">{desc}</span>\r\n            <span className=\"created\">{this.state.created}</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\"></button>\r\n          <button className=\"icon icon-destroy\" onClick={deleteSelf}></button>\r\n        </div>\r\n        {/* <input type=\"text\" className=\"edit\" value=\"Editing task\" /> */}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  deleteSelf: PropTypes.func.isRequired,\r\n  toggleCompletedSelf: PropTypes.func.isRequired,\r\n\r\n  task: PropTypes.exact({\r\n    timestamp: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n    mod: PropTypes.string.isRequired,\r\n  }),\r\n}\r\n\r\nexport default Task\r\n","import React, { Component, Fragment } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Task from \"./Task\"\r\n\r\nclass TaskList extends Component {\r\n  render() {\r\n    const { list, onToggleCompleted, onDeleteTask } = this.props\r\n\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {list.map((task) => {\r\n          return (\r\n            <Fragment key={task.id}>\r\n              <Task\r\n                task={task}\r\n                deleteSelf={() => onDeleteTask(task.id)}\r\n                toggleCompletedSelf={() => onToggleCompleted(task.id)}\r\n              />\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nTaskList.defaultProps = {\r\n  list: [],\r\n}\r\n\r\nTaskList.propTypes = {\r\n  list: PropTypes.array,\r\n  onToggleCompleted: PropTypes.func.isRequired,\r\n  onDeleteTask: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TaskList\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { ACTIVE, COMPLETED } from \"../constants\"\r\nimport { upperFirstLetter } from \"../upperFirstLetter\"\r\n\r\nclass TasksFilter extends Component {\r\n  render() {\r\n    const filters = [\"all\", ACTIVE, COMPLETED]\r\n    const { currentFilter, setCurrentFilter } = this.props\r\n\r\n    return (\r\n      <ul className=\"filters\">\r\n        {/* selected */}\r\n        {filters.map((filter) => {\r\n          return (\r\n            <li key={filter}>\r\n              <button\r\n                onClick={() => setCurrentFilter(filter)}\r\n                className={filter === currentFilter ? \"selected\" : \"\"}\r\n              >\r\n                {upperFirstLetter(filter)}\r\n              </button>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nTasksFilter.defaultProps = {\r\n  currentFilter: \"all\",\r\n}\r\n\r\nTasksFilter.propTypes = {\r\n  setCurrentFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TasksFilter\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport TasksFilter from \"./TasksFilter\"\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">{this.props.count} items left</span>\r\n\r\n        <TasksFilter\r\n          currentFilter={this.props.currentFilter}\r\n          setCurrentFilter={this.props.setCurrentFilter}\r\n        />\r\n\r\n        <button className=\"clear-completed\" onClick={this.props.clearCompleted}>\r\n          Clear completed\r\n        </button>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nFooter.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  currentFilter: PropTypes.string.isRequired,\r\n  setCurrentFilter: PropTypes.func.isRequired,\r\n  clearCompleted: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from \"react\"\n\nimport NewTaskForm from \"./components/NewTaskForm\"\nimport TaskList from \"./components/TaskList\"\nimport Footer from \"./components/Footer\"\n\nimport { ACTIVE, COMPLETED } from \"./constants\"\n\nclass App extends Component {\n  state = {\n    currentFilter: \"all\",\n    tasks: [],\n  }\n\n  createTask = (desc) => {\n    const newTask = {\n      desc,\n      id: `${Date.now()}-${desc}`,\n      mod: ACTIVE,\n      timestamp: Date.now(),\n    }\n\n    this.setState((state) => {\n      return {\n        tasks: [...state.tasks, newTask],\n      }\n    })\n  }\n\n  toggleCompleted = (id) => {\n    const toggledTask = this.state.tasks.find((task) => task.id === id)\n    toggledTask.mod = toggledTask.mod === ACTIVE ? COMPLETED : ACTIVE\n    this.forceUpdate()\n  }\n\n  deleteTask = (id) => {\n    this.setState((state) => {\n      return {\n        tasks: state.tasks.filter((task) => task.id !== id),\n      }\n    })\n  }\n\n  clearCompleted = () => {\n    this.setState((state) => {\n      return {\n        tasks: state.tasks.filter((task) => task.mod !== COMPLETED),\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.setState({\n      tasks: JSON.parse(localStorage.getItem(\"tasks\")) || [],\n    })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks))\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <NewTaskForm onCreate={this.createTask} list={this.state.tasks} />\n        </header>\n\n        <section className=\"main\">\n          <TaskList\n            list={this.state.tasks.filter((task) => {\n              return this.state.currentFilter === \"all\"\n                ? task\n                : task.mod === this.state.currentFilter\n            })}\n            onToggleCompleted={this.toggleCompleted}\n            onDeleteTask={this.deleteTask}\n          />\n\n          <Footer\n            count={this.state.tasks.length}\n            currentFilter={this.state.currentFilter}\n            setCurrentFilter={(newFilter) =>\n              this.setState({ currentFilter: newFilter })\n            }\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}